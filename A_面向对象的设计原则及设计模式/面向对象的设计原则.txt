面向对象思想设计原则
   A:单一职责原则------>
          其实就是开发人员经常说的”高内聚，低耦合”
             也就是说，每个类应该只有一个职责，对外只能提供一种功能，而引起类变化的原因应该只有一个。
			 在设计模式中，所有的设计模式都遵循这一原则。

   B:开闭原则------>
          核心思想是：一个对象对扩展开放，对修改关闭。
             其实开闭原则的意思就是：对类的改动是通过增加代码进行的，而不是修改现有代码。
			 也就是说软件开发人员一旦写出了可以运行的代码，就不应该去改动它，而是要保证它能一直运行下去，
			 如何能够做到这一点呢?这就需要借助于抽象和多态，即把可能变化的内容抽象出来，
			 从而使抽象的部分是相对稳定的，而具体的实现则是可以改变和扩展的。
             
   C:里氏替换原则------>
          核心思想：在任何父类出现的地方都可以用它的子类来替代。
             其实就是说：同一个继承体系中的对象应该有共同的行为特征。

   D:依赖注入原则------>
          核心思想：要依赖于抽象，不要依赖于具体实现。
            

   E:接口分离原则------>
          核心思想：不应该强迫程序依赖它们不需要使用的方法。
             一个接口不需要提供太多的行为，一个接口应该只提供一种对外的功能，
			 不应该把所有的操作都封装到一个接口中。

   F:迪米特原则------>
          核心思想：一个对象应当对其他对象尽可能少的了解
             降低各个对象之间的耦合，提高系统的可维护性。
			 在模块之间应该只通过接口编程，而不理会模块的内部工作原理，
			 它可以使各个模块耦合度降到最低，促进软件的复用

  