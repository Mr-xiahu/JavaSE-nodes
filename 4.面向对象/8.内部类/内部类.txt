(1)内部类概述:
		把类定义在其他类的内部，这个类就被称为内部类。
		举例：在类A中定义了一个类B，类B就是内部类。
	
	内部的访问特点：
		A:内部类可以直接访问外部类的成员，包括私有。
		B:外部类要访问内部类的成员，必须创建对象。
		
	class Outer {
	private int num = 10;
	
	class Inner {
		public void show() {
			System.out.println(num);
		}
	}
	
	public void method() {
		//找不到符号
		//show();
	
		Inner i = new Inner();
		i.show();
	}
}

(2)内部类位置
		成员位置:在成员位置定义的类，被称为成员内部类。	
		局部位置:在局部位置定义的类，被称为局部内部类。
		
		
	成员位置:在成员位置定义的类，被称为成员内部类。	
	
	
class Outer {
	private int num = 10;

	//成员位置	
	class Inner {//成员内部类
		
	}
	
	

	public void method() {
		//局部位置
		class Inner {//局部内部类
		
		}
	}
}


(3)成员内部类:
		如何直接访问内部类的成员。
		外部类名.内部类名 对象名 = 外部类对象.内部类对象;
	
class Outer {
	private int num = 10;
	
	class Inner {
		public void show() {
			System.out.println(num);
		}
	}
}

class InnerClassDemo3 {
	public static void main(String[] args) {
		//需求：我要访问Inner类的show()方法		
		
		//格式：外部类名.内部类名 对象名 = 外部类对象.内部类对象;
		Outer.Inner oi = new Outer().new Inner();
		oi.show();
	}
}	

(4)成员内部类的修饰符：
		private 为了保证数据的安全性
		static 为了方便访问数据
		
	注意：静态内部类访问的外部类数据必须用静态修饰。
	

(5)局部内部类
		A:可以直接访问外部类的成员
		B:在局部位置，可以创建内部类对象，通过对象调用内部类方法，来使用局部内部类功能