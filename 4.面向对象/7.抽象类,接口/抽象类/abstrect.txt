(1)抽象类的概述：
		动物不应该定义为具体的东西，而且动物中的吃，睡等也不应该是具体的。
		我们把一个不是具体的功能称为抽象的功能，而一个类中如果有抽象的功能，该类必须是抽象类。
		
(2)抽象类的特点：
		A:抽象类和抽象方法必须用abstract关键字修饰
		B:抽象类中不一定有抽象方法,但是有抽象方法的类必须定义为抽象类
		C:抽象类不能实例化
			因为它不是具体的。
			抽象类有构造方法，但是不能实例化?构造方法的作用是什么呢?
			    用于子类访问父类数据的初始化
		D:抽象的子类
			a:如果不想重写抽象方法，该子类是一个抽象类。
			b:重写所有的抽象方法，这个时候子类是一个具体的类。
			
		抽象类的实例化其实是靠具体的子类实现的。是多态的方式。
			Animal a = new Cat();
			
(3)抽象类的成员特点：
		成员变量：既可以是变量，也可以是常量。
		构造方法：有。
					用于子类访问父类数据的初始化。
		成员方法：既可以是抽象的，也可以是非抽象的。

(4)抽象类的成员方法特性：
		A:抽象方法 强制要求子类做的事情。
		B:非抽象方法 子类继承的事情，提高代码复用性。
(5)
(6)


注意:
    一个类如果没有抽象方法，可不可以定义为抽象类?如果可以，有什么意义?
	    A:可以。
	    B:不让创建对象。

    abstract不能和哪些关键字共存?
	    private	冲突
	    final	冲突	
	    static	无意义