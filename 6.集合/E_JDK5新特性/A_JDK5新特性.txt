JDK5的新特性：
	1.自动拆装箱
	
	2.泛型:是一种把类型明确的工作推迟到创建对象或者调用方法的时候才去明确的特殊的类型。参数化类型，把类型当作参数一样的传递。
   		格式：
   			<数据类型>
   			此处的数据类型只能是引用类型。
   		好处：
   			A:把运行时期的问题提前到了编译期间
   			B:避免了强制类型转换
   			C:优化了程序设计，解决了黄色警告线
			
			
		Java在JDK5后引入了泛型，提高程序的安全性。
		
		
		泛型的前世今生
			A:泛型的由来
				Object类型作为任意类型的时候，在向下转型的时候，会隐含一个转型问题
			B:泛型类
			C:泛型方法
			D:泛型接口
			E:泛型高级通配符
				?
				? extends E
				? super E
			
		一般是在集合中使用。
	
	3.增强for
		是for循环的一种。
   
   		格式：
   			for(元素数据类型 变量 : 数组或者Collection集合) {
  				使用变量即可，该变量就是元素
     		}
     
   		好处：简化了数组和集合的遍历。
   
   		弊端： 增强for的目标不能为null。
   		如何解决呢?
			对增强for的目标先进行不为null的判断，然后在使用。
			
			
	4.静态导入
		格式：import static 包名….类名.方法名;
   		可以直接导入到方法的级别
   
   		静态导入的注意事项：
   			A:方法必须是静态的
   			B:如果有多个同名的静态方法，容易不知道使用谁?这个时候要使用，必须加前缀。由此可见，意义不大，所以一般不用，但是要能看懂。
			
	5.可变参数:定义方法的时候不知道该定义多少个参数
   		格式：
   			修饰符 返回值类型 方法名(数据类型…  变量名){
   
   			}
   
   			注意：
   				这里的变量其实是一个数组
   				如果一个方法有可变参数，并且有多个参数，那么，可变参数肯定是最后一个
	6.枚举