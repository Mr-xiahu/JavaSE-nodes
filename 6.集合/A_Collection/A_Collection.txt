集合的由来：
 * 		我们学习的是面向对象语言，而面向对象语言对事物的描述是通过对象体现的，
		为了方便对多个对象进行操作，我们就必须把这多个对象进行存储。
 * 		而要想存储多个对象，就不能是一个基本的变量，而应该是一个容器类型的变量，
		在我们目前所学过的知识里面，有哪些是容器类型的呢?数组和StringBuffer。
		但是呢?StringBuffer的结果是一个字符串，不一定满足我们的要求，所以我们只能选择数组，这就是对象数组。
 * 		而对象数组又不能适应变化的需求，因为数组的长度是固定的，
		这个时候，为了适应变化的需求，Java就提供了集合类供我们使用。
		
	Collection:是集合的顶层接口，它的子体系有重复的，有唯一的，有有序的，有无序的。(后面会慢慢的讲解)
 * 
 * 	Collection的功能概述：
 * 		1：添加功能
 * 			boolean add(Object obj):添加一个元素
 * 			boolean addAll(Collection c):添加一个集合的元素
 * 		2:删除功能
 * 			void clear():移除所有元素
 * 			boolean remove(Object o):移除一个元素
 * 			boolean removeAll(Collection c):移除一个集合的元素(是一个还是所有)
 * 		3:判断功能
 * 			boolean contains(Object o)：判断集合中是否包含指定的元素
 * 			boolean containsAll(Collection c)：判断集合中是否包含指定的集合元素(是一个还是所有)
 * 			boolean isEmpty()：判断集合是否为空
 * 		4:获取功能
 * 			Iterator<E> iterator()(重点)
 * 		5:长度功能
 * 			int size():元素的个数
 * 				面试题：数组有没有length()方法呢?字符串有没有length()方法呢?集合有没有length()方法呢?
					数组是length属性，字符串是length()方法,集合是size()方法
 * 		6:交集功能
 * 			boolean retainAll(Collection c):两个集合都有的元素?思考元素去哪了，返回的boolean又是什么意思呢?
				假设有两个集合A，B。
				A对B做交集，最终的结果保存在A中，B不变。
				返回值表示的是A是否发生过改变。
 * 		7：把集合转换为数组
 * 			Object[] toArray()
 
 
	Iterator iterator():迭代器，集合的专用遍历方式
 * 		Object next():获取元素,并移动到下一个位置。
 * 			NoSuchElementException：没有这样的元素，因为你已经找到最后了。
 * 		boolean hasNext():如果仍有元素可以迭代，则返回 true。（